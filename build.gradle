plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.delta'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.data:spring-data-commons'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.6'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.hibernate:hibernate-core:5.5.6.Final'
	implementation 'org.hibernate:hibernate-validator:7.0.1.Final'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'com.graphql-java:graphql-spring-boot-starter:5.0.2'
	implementation 'com.graphql-java:graphql-java-tools:5.2.4'
//	implementation 'com.graphql-java-kickstart:playground-spring-boot-starter:5.10.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

bootRun {
	optimizedLaunch = false
	sourceResources sourceSets.main
}

springBoot {
	buildInfo()
	mainClass = "${group}.PartnersApplication"
}

jar {
	enabled = false
}